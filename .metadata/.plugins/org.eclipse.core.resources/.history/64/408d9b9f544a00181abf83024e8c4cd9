package abm.agents;

import abm.helpers.Utils;

public class Agent {
	
	private static int idCounter = 0 ;
	
	private float assets ;
	private float debt ;
	private float netWorth ;
	private int id ;
	
	public Agent() { 
		this.id = idCounter++ ;
	}
	
	public Agent(float assets, float debt) {
		this.assets = assets ;
		this.debt = debt ;
		this.updateNetWorth();
		this.id = idCounter++ ;
	}
	
	public int getId() {
		return id ;
	}
	
	public void setAssets(float assets) {
		this.assets = assets ;
		this.updateNetWorth();
	}
	
	public float getAssets() {
		return(this.assets);
	}
	
	public void setDebt(float debt) {
		this.debt = debt ;
		this.updateNetWorth();
	}
	
	public float getDebt() {
		return(this.debt);
	}
	
	public float getNetWorth() {
		return(this.netWorth);
	}
	
	public void updateDebt(float amount) {
		this.debt = this.debt + amount ;
		this.updateNetWorth();
	}
	
	public void updateAssets(float amount) {
		this.assets = this.assets + amount ;
		this.updateNetWorth();
	}
	
	private void updateNetWorth() {
		this.netWorth = this.assets - this.debt ;
	}
	
	public Context getContext() {
		return 
	}
	
	@Override 
	public boolean equals(Object obj) {
		
		if(obj instanceof Agent) {
			
			if(((Agent) obj).getId() == this.id) {
				return true ;
			}
			
			return false ;
		}
		
		return false ;
	}
	
	@Override
	public String toString() {
		
		Integer id = this.id ;
		Float assets = this.assets ;
		Float debt = this.debt ;
		Float netWorth = this.netWorth ;

		String[][] fields = { { "Id", id.toString()}, 
							{"Assets", assets.toString()},
							{"Debt", debt.toString()},
							{"Net Worth", netWorth.toString()} } ;
		
	    return Utils.getAgentDescriptor(fields, true) ;
	}

}
