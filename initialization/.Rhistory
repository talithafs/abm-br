params[10:14,] <- list(paste0("n_emps_class_",classes), round(props$pessoas*n.employed))
params
params[15:19,] <- list(paste0("n_unemps_class_",classes), round(props$pessoas*n.unemployed))
params
knitr::kable(disp.params[1:2,], caption = "\\label{tab:int}Interest rates", row.names = F)
write.csv(params, file = "new_parameters.csv")
library(dplyr)
# Constants
mln <- 1*10^6
tsd <- 1*10^3
bln <- 1*10^9
tln <- 1*10^12
#
disp.params <- data.frame("Description" = character(), "Unit" = character(),
"Value" = numeric(), stringsAsFactors=FALSE)
params <- data.frame("key" = character(), "value" = numeric(), stringsAsFactors = FALSE)
n.consumers <- 2000
# Read data from Cadastro Central de Empresas
dist.firms <- read.csv("cce.csv", stringsAsFactors = F, encoding = "latin1")
dist.firms[dist.firms == "X"] <- 0
View(dist.firms)
dist.firms[,4:7] <- data.frame(lapply(dist.firms[,4:7], as.integer))
# This column will be used later
dist.firms$avg.min.wages <- as.numeric(gsub(",","\\.",dist.firms$avg.min.wages))
# Eliminate NAs
dist.firms <- na.omit(dist.firms)
# Filter
v1 <- filter(dist.firms, (type == "c" | type == "k") & bracket == "Total")
v2 <- filter(dist.firms, (type == "b"))
View(v1)
View(v2)
# Get totals
tot.firms <- sum(v1$units)
tot.empls <- sum(v1$employees)
tot.banks <- sum(v2$units)
# Get subtotals
v11 <- filter(v1, type == "c")
v12 <- filter(v1, type == "k")
tot.c <- sum(v11$units)
tot.k <- sum(v12$units)
unemp <- read.csv2("desemprego.csv", stringsAsFactors = F, sep="\t")
unemp.rate <- round(mean(unemp[grepl("2015",unemp[,1]),2])/100,3)
tot.workers <- tot.empls/(1 - unemp.rate)
n.consumers
n.con.firms <- round(n.consumers*(tot.c/tot.workers))
n.cap.firms <- round(n.consumers*(tot.k/tot.workers))
n.banks <- round(n.consumers*(tot.banks/tot.workers))
n.unemployed <- round(2000*unemp.rate)
n.employed <- n.consumers - n.unemployed
real.gdp = 1817242668600
nom.gdp = 6000572000000
gdp.per.worker = round(real.gdp/tot.workers)
gdp = round(gdp.per.worker*n.consumers)
n.employed
gdp.per.empl = round(gdp/n.employed)
# Percentage of salaries in GDP
perc.sal = round(2516592 / 5778953,2)
gross.sal = perc.sal*gdp
gross.profit = gdp - gross.sal
prf.per.empl = round(gross.profit/n.employed)
capc <- read.csv2("used_capacity.csv", stringsAsFactors = F, sep="\t", encoding = "latin1")
capc <- round(mean(capc[grepl("2015",capc[,1]),2])/100,3)
tp = "c"
n.firms = n.con.firms
filtered <- filter(dist.firms, type == tp, bracket != "Total")[,3:5]
filtered
filtered <- aggregate(filtered[,-1], by = list(filtered$bracket), FUN = sum)
View(filtered)
s = sum(filtered$units)
eiling((filtered$units/s)*n.firms)
ceiling((filtered$units/s)*n.firms)
floor((filtered$employees/tot.empls)*n.employed)
filtered$units = ceiling((filtered$units/s)*n.firms)
filtered$employees = floor((filtered$employees/tot.empls)*n.employed)
dist <- data.frame("n.firms" = integer(), "n.emps" = integer(), "tot.emps" = integer())
j = 1
i = 1
group <- filtered[i,]
group
emps.per.firm <- floor(group$employees/group$units)
emps.per.firm
dif <- group$employees - (emps.per.firm*group$units)
dif
get.dist <- function(tp, n.firms, dist.firms){
filtered <- filter(dist.firms, type == tp, bracket != "Total")[,3:5]
filtered <- aggregate(filtered[,-1], by = list(filtered$bracket), FUN = sum)
s = sum(filtered$units)
filtered$units = ceiling((filtered$units/s)*n.firms)
filtered$employees = floor((filtered$employees/tot.empls)*n.employed)
dist <- data.frame("n.firms" = integer(), "n.emps" = integer(), "tot.emps" = integer())
j = 1
for(i in 1:nrow(filtered)){
group <- filtered[i,]
emps.per.firm <- floor(group$employees/group$units)
dif <- group$employees - (emps.per.firm*group$units)
if(dif > 0){
dist[j,] <- list(dif, emps.per.firm + 1, dif*(emps.per.firm + 1))
j = j + 1
}
dist[j,] <- list(group$units - dif, emps.per.firm, (group$units - dif)*emps.per.firm)
j = j + 1
}
agg.dist <- aggregate(dist, list(dist$n.emps),sum)[,-1]
return(agg.dist)
}
dist.con <- get.dist("c",n.con.firms, dist.firms)
View(dist.con)
sum(dist.con$tot.emps)
dist.cap <- get.dist("k",n.cap.firms, dist.firms)
sum(dist.cap$tot.emps)
sum(dist.cap$tot.emps) + sum(dist.con$tot.emps)
n.employed
View(dist.cap)
get.dist <- function(tp, n.firms, dist.firms){
filtered <- filter(dist.firms, type == tp, bracket != "Total")[,3:5]
filtered <- aggregate(filtered[,-1], by = list(filtered$bracket), FUN = sum)
s = sum(filtered$units)
filtered$units = ceiling((filtered$units/s)*n.firms)
filtered$employees = ceiling((filtered$employees/tot.empls)*n.employed)
dist <- data.frame("n.firms" = integer(), "n.emps" = integer(), "tot.emps" = integer())
j = 1
for(i in 1:nrow(filtered)){
group <- filtered[i,]
emps.per.firm <- floor(group$employees/group$units)
dif <- group$employees - (emps.per.firm*group$units)
if(dif > 0){
dist[j,] <- list(dif, emps.per.firm + 1, dif*(emps.per.firm + 1))
j = j + 1
}
dist[j,] <- list(group$units - dif, emps.per.firm, (group$units - dif)*emps.per.firm)
j = j + 1
}
agg.dist <- aggregate(dist, list(dist$n.emps),sum)[,-1]
return(agg.dist)
}
dist.con <- get.dist("c",n.con.firms, dist.firms)
dist.cap <- get.dist("k",n.cap.firms, dist.firms)
sum(dist.cap$tot.emps)
sum(dist.con$tot.emps)
sum(dist.cap$tot.emps) + sum(dist.con$tot.emps)
get.dist <- function(tp, n.firms, dist.firms){
filtered <- filter(dist.firms, type == tp, bracket != "Total")[,3:5]
filtered <- aggregate(filtered[,-1], by = list(filtered$bracket), FUN = sum)
s = sum(filtered$units)
filtered$units = ceiling((filtered$units/s)*n.firms)
filtered$employees = ceiling((filtered$employees/tot.empls)*n.employed)
dist <- data.frame("n.firms" = integer(), "n.emps" = integer(), "tot.emps" = integer())
j = 1
for(i in 1:nrow(filtered)){
group <- filtered[i,]
emps.per.firm <- ceiling(group$employees/group$units)
dif <- group$employees - (emps.per.firm*group$units)
if(dif > 0){
dist[j,] <- list(dif, emps.per.firm + 1, dif*(emps.per.firm + 1))
j = j + 1
}
dist[j,] <- list(group$units - dif, emps.per.firm, (group$units - dif)*emps.per.firm)
j = j + 1
}
agg.dist <- aggregate(dist, list(dist$n.emps),sum)[,-1]
return(agg.dist)
}
dist.con <- get.dist("c",n.con.firms, dist.firms)
dist.cap <- get.dist("k",n.cap.firms, dist.firms)
sum(dist.cap$tot.emps) + sum(dist.con$tot.emps)
get.dist <- function(tp, n.firms, dist.firms){
filtered <- filter(dist.firms, type == tp, bracket != "Total")[,3:5]
filtered <- aggregate(filtered[,-1], by = list(filtered$bracket), FUN = sum)
s = sum(filtered$units)
filtered$units = ceiling((filtered$units/s)*n.firms)
filtered$employees = floor((filtered$employees/tot.empls)*n.employed)
dist <- data.frame("n.firms" = integer(), "n.emps" = integer(), "tot.emps" = integer())
j = 1
for(i in 1:nrow(filtered)){
group <- filtered[i,]
emps.per.firm <- ceiling(group$employees/group$units)
dif <- group$employees - (emps.per.firm*group$units)
if(dif > 0){
dist[j,] <- list(dif, emps.per.firm + 1, dif*(emps.per.firm + 1))
j = j + 1
}
dist[j,] <- list(group$units - dif, emps.per.firm, (group$units - dif)*emps.per.firm)
j = j + 1
}
agg.dist <- aggregate(dist, list(dist$n.emps),sum)[,-1]
return(agg.dist)
}
sum(dist.cap$tot.emps) + sum(dist.con$tot.emps)
get.dist <- function(tp, n.firms, dist.firms){
filtered <- filter(dist.firms, type == tp, bracket != "Total")[,3:5]
filtered <- aggregate(filtered[,-1], by = list(filtered$bracket), FUN = sum)
s = sum(filtered$units)
filtered$units = floor((filtered$units/s)*n.firms)
filtered$employees = floor((filtered$employees/tot.empls)*n.employed)
dist <- data.frame("n.firms" = integer(), "n.emps" = integer(), "tot.emps" = integer())
j = 1
for(i in 1:nrow(filtered)){
group <- filtered[i,]
emps.per.firm <- ceiling(group$employees/group$units)
dif <- group$employees - (emps.per.firm*group$units)
if(dif > 0){
dist[j,] <- list(dif, emps.per.firm + 1, dif*(emps.per.firm + 1))
j = j + 1
}
dist[j,] <- list(group$units - dif, emps.per.firm, (group$units - dif)*emps.per.firm)
j = j + 1
}
agg.dist <- aggregate(dist, list(dist$n.emps),sum)[,-1]
return(agg.dist)
}
get.dist <- function(tp, n.firms, dist.firms){
filtered <- filter(dist.firms, type == tp, bracket != "Total")[,3:5]
filtered <- aggregate(filtered[,-1], by = list(filtered$bracket), FUN = sum)
s = sum(filtered$units)
filtered$units = ceiling((filtered$units/s)*n.firms)
filtered$employees = floor((filtered$employees/tot.empls)*n.employed)
dist <- data.frame("n.firms" = integer(), "n.emps" = integer(), "tot.emps" = integer())
j = 1
for(i in 1:nrow(filtered)){
group <- filtered[i,]
emps.per.firm <- ceiling(group$employees/group$units)
dif <- group$employees - (emps.per.firm*group$units)
if(dif > 0){
dist[j,] <- list(dif, emps.per.firm + 1, dif*(emps.per.firm + 1))
j = j + 1
}
dist[j,] <- list(group$units - dif, emps.per.firm, (group$units - dif)*emps.per.firm)
j = j + 1
}
agg.dist <- aggregate(dist, list(dist$n.emps),sum)[,-1]
return(agg.dist)
}
dist.con <- get.dist("c",n.con.firms, dist.firms)
dist.cap <- get.dist("k",n.cap.firms, dist.firms)
sum(dist.cap$tot.emps) + sum(dist.con$tot.emps)
get.dist <- function(tp, n.firms, dist.firms){
filtered <- filter(dist.firms, type == tp, bracket != "Total")[,3:5]
filtered <- aggregate(filtered[,-1], by = list(filtered$bracket), FUN = sum)
s = sum(filtered$units)
filtered$units = floor((filtered$units/s)*n.firms)
filtered$employees = floor((filtered$employees/tot.empls)*n.employed)
dist <- data.frame("n.firms" = integer(), "n.emps" = integer(), "tot.emps" = integer())
j = 1
for(i in 1:nrow(filtered)){
group <- filtered[i,]
emps.per.firm <- ceiling(group$employees/group$units)
dif <- group$employees - (emps.per.firm*group$units)
if(dif > 0){
dist[j,] <- list(dif, emps.per.firm + 1, dif*(emps.per.firm + 1))
j = j + 1
}
dist[j,] <- list(group$units - dif, emps.per.firm, (group$units - dif)*emps.per.firm)
j = j + 1
}
agg.dist <- aggregate(dist, list(dist$n.emps),sum)[,-1]
return(agg.dist)
}
dist.con <- get.dist("c",n.con.firms, dist.firms)
dist.cap <- get.dist("k",n.cap.firms, dist.firms)
get.dist <- function(tp, n.firms, dist.firms){
filtered <- filter(dist.firms, type == tp, bracket != "Total")[,3:5]
filtered <- aggregate(filtered[,-1], by = list(filtered$bracket), FUN = sum)
s = sum(filtered$units)
filtered$units = ceiling((filtered$units/s)*n.firms)
filtered$employees = floor((filtered$employees/tot.empls)*n.employed)
dist <- data.frame("n.firms" = integer(), "n.emps" = integer(), "tot.emps" = integer())
j = 1
for(i in 1:nrow(filtered)){
group <- filtered[i,]
emps.per.firm <- floor(group$employees/group$units)
dif <- group$employees - (emps.per.firm*group$units)
if(dif > 0){
dist[j,] <- list(dif, emps.per.firm + 1, dif*(emps.per.firm + 1))
j = j + 1
}
dist[j,] <- list(group$units - dif, emps.per.firm, (group$units - dif)*emps.per.firm)
j = j + 1
}
agg.dist <- aggregate(dist, list(dist$n.emps),sum)[,-1]
return(agg.dist)
}
dist.con <- get.dist("c",n.con.firms, dist.firms)
dist.cap <- get.dist("k",n.cap.firms, dist.firms)
sum(dist.cap$tot.emps) + sum(dist.con$tot.emps)
get.dist <- function(tp, n.firms, dist.firms){
filtered <- filter(dist.firms, type == tp, bracket != "Total")[,3:5]
filtered <- aggregate(filtered[,-1], by = list(filtered$bracket), FUN = sum)
s = sum(filtered$units)
filtered$units = ceiling((filtered$units/s)*n.firms)
filtered$employees = ceiling((filtered$employees/tot.empls)*n.employed)
dist <- data.frame("n.firms" = integer(), "n.emps" = integer(), "tot.emps" = integer())
j = 1
for(i in 1:nrow(filtered)){
group <- filtered[i,]
emps.per.firm <- floor(group$employees/group$units)
dif <- group$employees - (emps.per.firm*group$units)
if(dif > 0){
dist[j,] <- list(dif, emps.per.firm + 1, dif*(emps.per.firm + 1))
j = j + 1
}
dist[j,] <- list(group$units - dif, emps.per.firm, (group$units - dif)*emps.per.firm)
j = j + 1
}
agg.dist <- aggregate(dist, list(dist$n.emps),sum)[,-1]
return(agg.dist)
}
dist.con <- get.dist("c",n.con.firms, dist.firms)
dist.cap <- get.dist("k",n.cap.firms, dist.firms)
sum(dist.cap$tot.emps) + sum(dist.con$tot.emps)
1746 / 2000
sum(dist.cap$n.firms*dist.cap$n.emps)
sum(dist.con$n.firms*dist.con$n.emps)
sum(dist.con$n.firms*dist.con$n.emps) + sum(dist.cap$n.firms*dist.cap$n.emps)
get.dist <- function(tp, n.firms, dist.firms){
filtered <- filter(dist.firms, type == tp, bracket != "Total")[,3:5]
filtered <- aggregate(filtered[,-1], by = list(filtered$bracket), FUN = sum)
s = sum(filtered$units)
filtered$units = ceiling((filtered$units/s)*n.firms)
filtered$employees = ceiling((filtered$employees/tot.empls)*n.employed)
dist <- data.frame("n.firms" = integer(), "n.emps" = integer(), "tot.emps" = integer())
j = 1
for(i in 1:nrow(filtered)){
group <- filtered[i,]
emps.per.firm <- floor(group$employees/group$units)
dif <- group$employees - (emps.per.firm*group$units)
if(dif > 0){
dist[j,] <- list(dif, emps.per.firm + 1, dif*(emps.per.firm + 1))
j = j + 1
}
dist[j,] <- list(group$units - dif, emps.per.firm, (group$units - dif)*emps.per.firm)
j = j + 1
}
agg.dist <- aggregate(dist, list(dist$n.emps),sum)[,-1]
return(agg.dist)
}
dist.con <- get.dist("c",n.con.firms, dist.firms)
dist.cap <- get.dist("k",n.cap.firms, dist.firms)
sum(dist.con$n.firms*dist.con$n.emps) + sum(dist.cap$n.firms*dist.cap$n.emps)
get.dist <- function(tp, n.firms, dist.firms){
filtered <- filter(dist.firms, type == tp, bracket != "Total")[,3:5]
filtered <- aggregate(filtered[,-1], by = list(filtered$bracket), FUN = sum)
s = sum(filtered$units)
filtered$units = ceiling((filtered$units/s)*n.firms)
filtered$employees = floor((filtered$employees/tot.empls)*n.employed)
dist <- data.frame("n.firms" = integer(), "n.emps" = integer(), "tot.emps" = integer())
j = 1
for(i in 1:nrow(filtered)){
group <- filtered[i,]
emps.per.firm <- floor(group$employees/group$units)
dif <- group$employees - (emps.per.firm*group$units)
if(dif > 0){
dist[j,] <- list(dif, emps.per.firm + 1, dif*(emps.per.firm + 1))
j = j + 1
}
dist[j,] <- list(group$units - dif, emps.per.firm, (group$units - dif)*emps.per.firm)
j = j + 1
}
agg.dist <- aggregate(dist, list(dist$n.emps),sum)[,-1]
return(agg.dist)
}
dist.con <- get.dist("c",n.con.firms, dist.firms)
dist.cap <- get.dist("k",n.cap.firms, dist.firms)
sum(dist.con$n.firms*dist.con$n.emps) + sum(dist.cap$n.firms*dist.cap$n.emps)
n.emps
gross.sal
gdp
# Read data
dist.inc <- read.csv("distribuicao_renda_riqueza.csv", stringsAsFactors = F, encoding = "latin1")
dist.inc[,-1] <- data.frame(lapply(dist.inc[,-1], function(x) {
y <- gsub(',', '', x)
as.numeric(y)
}
))
names(dist.inc) = c("faixa","pessoas","renda","rend.trib.ex","rend.ist","bens")
dist.inc[,-1] <- data.frame(lapply(dist.inc[,-1], as.integer))
disp <- dist.inc
names(disp) <- c("Bracket","Population","Income","Not Exempt","Exempt","Wealth")
# Get total wealth
wealth = (dist.inc[nrow(dist.inc),ncol(dist.inc)])*mln
# Find wealth in terms of the model's GDP
wealth = (wealth/nom.gdp)*gdp
# Collapse "renda isenta" and "renda não isenta"
dist.inc$renda <- (dist.inc$renda + dist.inc$rend.ist + dist.inc$rend.trib.ex)*mln
dist.inc <- dist.inc[,c(-4,-5)]
dist.inc$bens = dist.inc$bens*mln
# Calculate totals, column-wise
tot <- dist.inc[nrow(dist.inc),]
# Aggregate by social class
filt <- dist.inc$faixa %in% c("Até 1/2","Mais de 1/2 a 1", "Mais de 1 a 2")
class.E = dist.inc[filt,]
class.E = data.frame(lapply(class.E[,-1], sum))
class.E$faixa = "E - Between 0+ and 2 MS"
class.E[,-4] = class.E[,-4] / tot[,-1]
filt <- dist.inc$faixa %in% c("Mais de 2 a 3","Mais de 3 a 5")
class.D = dist.inc[filt,]
class.D = data.frame(lapply(class.D[,-1], sum))
class.D$faixa = "D - Between 2+ and 5 MS"
class.D[,-4] = class.D[,-4] / tot[,-1]
filt <- dist.inc$faixa %in% c("Mais de 5 a 7","Mais de 7 a 10")
class.C = data.frame(lapply(class.C[,-1], sum))
class.C$faixa = "C - Between 5+ and 10 MS"
class.C[,-4] = class.C[,-4] / tot[,-1]
filt <- dist.inc$faixa %in% c("Mais de 2 a 3","Mais de 3 a 5")
class.D = dist.inc[filt,]
class.D = data.frame(lapply(class.D[,-1], sum))
class.D$faixa = "D - Between 2+ and 5 MS"
class.D[,-4] = class.D[,-4] / tot[,-1]
filt <- dist.inc$faixa %in% c("Mais de 5 a 7","Mais de 7 a 10")
class.C = dist.inc[filt,]
class.C = data.frame(lapply(class.C[,-1], sum))
class.C$faixa = "C - Between 5+ and 10 MS"
class.C[,-4] = class.C[,-4] / tot[,-1]
filt <- dist.inc$faixa %in% c("Mais de 10 a 15","Mais de 15 a 20")
class.B = dist.inc[filt,]
class.B = data.frame(lapply(class.B[,-1], sum))
class.B$faixa = "B - Between 10+ and 20 MS"
class.B[,-4] = class.B[,-4] / tot[,-1]
filt <- dist.inc$faixa %in% unique(dist.inc$faixa)[10:17]
class.A = dist.inc[filt,]
class.A = data.frame(lapply(class.A[,-1], sum))
class.A$faixa = "A - More than 20 MS"
class.A[,-4] = class.A[,-4] / tot[,-1]
props <- rbind(class.A, class.B, class.C, class.D, class.E)
classes <- c("A","B","C","D","E")
vec.emps <- round(props$pessoas*n.employed)
vec.unemps <- round(props$pessoas*n.unemployed)
vec.wages <- round((props$renda*gross.sal/round(props$pessoas*n.employed))/12)
vec.wealth <- round((props$bens*wealth)/(props$pessoas*n.consumers))
dist.inc <- data.frame(class = classes, emps = vec.emps, unemps = vec.unemps, mon.wage = vec.wages, wealth = vec.wealth)
View(dist.inc)
sum(dist.inc$emps) + sum(dist.inc$unemps)
sum(dist.inc$emps)
sum(dist.inc$emps * dist.inc * mon.wage)
sum(dist.inc$emps * dist.inc * dist.inc$mon.wage)
sum(dist.inc$emps * dist.inc$mon.wage)
gross.sal
gross.sal/12
sum(dist.inc$emps)
sum(dist.inc$unemps)
n.employed
sum = 0
for(i in 1:nrow(dist.fir)){
sum = sum + dist.fir[i,1]*dist.fir[i,2]
}
temp1 <- cbind(dist.con[,-3],"c")
temp1 <- cbind(dist.con[,-3],"c")
names(temp1)[3] <- "type"
names(temp2)[3] <- "type"
dist.fir <- rbind(temp1,temp2)
sum = 0
for(i in 1:nrow(dist.fir)){
sum = sum + dist.fir[i,1]*dist.fir[i,2]
}
temp1 <- cbind(dist.con[,-3],"c")
temp2 <- cbind(dist.cap[,-3],"k")
names(temp1)[3] <- "type"
names(temp2)[3] <- "type"
dist.fir <- rbind(temp1,temp2)
sum = 0
for(i in 1:nrow(dist.fir)){
sum = sum + dist.fir[i,1]*dist.fir[i,2]
}
sum
dist.fir[2,1] = 100
sum = 0
for(i in 1:nrow(dist.fir)){
sum = sum + dist.fir[i,1]*dist.fir[i,2]
}
sum
gross.sal
n.con.firms
gdp.per.empl
n.con.firms*gdp.per.empl
gross.sal
gross.sal/12
install.packages(BETS)
install.packages("BETS")
# Chunck options
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
# Libraries
library(kableExtra)
library(dplyr)
# Constants
mln <- 1*10^6
tsd <- 1*10^3
bln <- 1*10^9
tln <- 1*10^12
#
disp.params <- data.frame("Description" = character(), "Unit" = character(),
"Value" = numeric(), stringsAsFactors=FALSE)
params <- data.frame("key" = character(), "value" = numeric(), stringsAsFactors = FALSE)
require(BETS)
require(BETS)
BETSsearch("selic")
BETSsearch("selic", view = F)
BETSsearch("selic", view = T)
selic <- BETSget(4390)
selic
selic <- BETSget(4447)
selic <- BETSget(4777)
BETSsearch("ipca")
BETSget(11426)
BETSget(11426)
selic <- BETSget(4390)
selic
selic <- ts(BETSget(4390)[,2],start=c(1986,6))
selic
selic <- ts(BETSget(4390)[,2],start=c(1986,6), frequency = 12)
selic
mean.selic <- mean(window(selic, start=c(2015,1), end=c(2015,12)))
mean.selic
round(mean.selic,3)
